# disable _this_ implicit rule
%.c: %.y

%.c: %.l

%.cc: %.l
	$(LEX) -o $@ $(LFAGS) $<

%.cc: %.y
	$(call bold,>>> Creating parser via bison ...)
	$(olddir := pwd)
	# make a copy of the original file
	cp $< $(<).orig
	# create a new temporary directory
	$(eval tmpdir := $(shell mktemp -d 2>/dev/null || mktemp -d -t 'gapc_XXXXXXXX'))
	# copy input file into temporary directory
	cp $< $(tmpdir)/
	# use bison to generate parser source files
	#   we have a breaking change since Bison 3.3.2, which only effects src/parser.y
	#   if first bison attempt fails, we will try to apply a patch to the input in the tmpdir and rerun the code generation
	cd $(tmpdir); $(YACC) $(YFLAGS) -o $(notdir $@) $(notdir $<) 2>&1 \
	|| (echo "failed to generate parser, trying to patch input $< file..." && (patch $(notdir $<) < $(abspath $<_apiparserclass.patch) && $(YACC) $(YFLAGS) -o $(notdir $@) $(notdir $<) 2>&1)) \
	|| (echo "failed to generate parser, trying another patch on input $< file..." && cp $(abspath $<) . && (patch $(notdir $<) < $(abspath $<_osx.patch) && $(YACC) $(YFLAGS) -o $(notdir $@) $(notdir $<) 2>&1))
	# remove source file from temporary directiry
	rm $(tmpdir)/$(notdir $<)
	# copy all generated files into working directory
	cp $(tmpdir)/* $(dir $@)
	# clean up temporary directory
	rm $(tmpdir)/*
	rmdir $(tmpdir)
	# revert patch
	mv $(olddir)$(<).orig $<
