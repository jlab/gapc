
#ifndef CMPROBS_HH
#define CMPROBS_HH

inline int charToIndex(char a) {
  if ((a == 'A') || (a == 'a')) return 0;
  if ((a == 'C') || (a == 'c')) return 1;
  if ((a == 'G') || (a == 'g')) return 2;
  if ((a == 'U') || (a == 'u')) return 3;
  return 99;
}
inline int charToIndex(char a, char b) {
  if (((a == 'A') || (a == 'a')) && ((b == 'A') || (b == 'a'))) return 0;
  if (((a == 'A') || (a == 'a')) && ((b == 'C') || (b == 'c'))) return 1;
  if (((a == 'A') || (a == 'a')) && ((b == 'G') || (b == 'g'))) return 2;
  if (((a == 'A') || (a == 'a')) && ((b == 'U') || (b == 'u'))) return 3;
  if (((a == 'C') || (a == 'c')) && ((b == 'A') || (b == 'a'))) return 4;
  if (((a == 'C') || (a == 'c')) && ((b == 'C') || (b == 'c'))) return 5;
  if (((a == 'C') || (a == 'c')) && ((b == 'G') || (b == 'g'))) return 6;
  if (((a == 'C') || (a == 'c')) && ((b == 'U') || (b == 'u'))) return 7;
  if (((a == 'G') || (a == 'g')) && ((b == 'A') || (b == 'a'))) return 8;
  if (((a == 'G') || (a == 'g')) && ((b == 'C') || (b == 'c'))) return 9;
  if (((a == 'G') || (a == 'g')) && ((b == 'G') || (b == 'g'))) return 10;
  if (((a == 'G') || (a == 'g')) && ((b == 'U') || (b == 'u'))) return 11;
  if (((a == 'U') || (a == 'u')) && ((b == 'A') || (b == 'a'))) return 12;
  if (((a == 'U') || (a == 'u')) && ((b == 'C') || (b == 'c'))) return 13;
  if (((a == 'U') || (a == 'u')) && ((b == 'G') || (b == 'g'))) return 14;
  if (((a == 'U') || (a == 'u')) && ((b == 'U') || (b == 'u'))) return 15;
  return 99;
}
static const float emissions[21][4] = {
  {0.0, 0.0, 0.0, 0.0},
  {0.000, 0.000, 0.000, 0.000},
  {0.000, 0.000, 0.000, 0.000},
  {0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0},
  {0.368, -0.385, -0.191, 0.094},
  {0.368, -0.385, -0.191, 0.094},
  {0.0, 0.0, 0.0, 0.0},
  {0.000, 0.000, 0.000, 0.000},
  {0.000, 0.000, 0.000, 0.000},
  {0.000, 0.000, 0.000, 0.000},
  {0.0, 0.0, 0.0, 0.0},
  {0.000, 0.000, 0.000, 0.000},
  {0.0, 0.0, 0.0, 0.0},
  {0.368, -0.385, -0.191, 0.094},
  {0.368, -0.385, -0.191, 0.094},
  {0.0, 0.0, 0.0, 0.0},
  {0.000, 0.000, 0.000, 0.000},
  {0.000, 0.000, 0.000, 0.000},
  {0.000, 0.000, 0.000, 0.000},
};
inline float getEmission(int pos, char a) {
  return emissions[pos][charToIndex(a)];
}
static const float pair_emissions[21][16] = {
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {1.981, -8.618, 2.903, -4.869, -6.316, -8.108, 2.094, -7.200, -7.986, -4.905, -8.133, -6.722, -3.042, -8.451, -4.018, -6.800},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {1.986, -6.270, -7.785, -2.585, -9.584, -10.804, -5.093, -7.806, 2.908, 2.062, -8.009, -3.561, -5.179, -9.057, -6.956, -6.389},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
};
inline float getPairEmission(int pos, char a, char b) {
  return pair_emissions[pos][charToIndex(a, b)];
}
#endif
