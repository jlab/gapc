Terminals unused in grammar

   DEC
   DEQ
   IEQ
   INC
   PARAMETERS
   LEB
   REB
   UNEXPECTED_CHARACTER


Grammar

    0 $accept: start "end of file"

    1 start: START_PROGRAM program

    2 $@1: %empty

    3 start: START_PRODUCT $@1 product

    4 $@2: %empty

    5 program: imports_opt input_opt types_opt signature algebras_opt grammars $@2 instances_opt

    6 imports_opt: imports
    7            | %empty

    8 imports: import
    9        | imports import

   10 import: IMPORT module_ident
   11       | IMPORT '"' STRING '"'

   12 module_ident: STRING

   13 input_opt: INPUT input_specifier
   14          | INPUT '<' inputs '>'
   15          | %empty

   16 inputs: input
   17       | inputs ',' input

   18 input: input_specifier

   19 input_specifier: STRING

   20 types_opt: types
   21          | %empty

   22 types: type
   23      | types type

   24 type: TYPE ident '=' datatype
   25     | TYPE ident '=' EXTERN

   26 datatype: type_specifier
   27         | "alphabet keyword"
   28         | VOID
   29         | '[' type_specifier ']'
   30         | '(' named_datatypes ')'

   31 type_specifier: STRING

   32 named_datatypes: named_datatype
   33                | named_datatypes ',' named_datatype

   34 named_datatype: datatype name_ident

   35 name_ident: STRING

   36 @3: %empty

   37 signature: SIGNATURE ident '(' sig_args ')' @3 '{' sig_decls '}'

   38 sig_args: "alphabet keyword" ',' args signtparas

   39 args: arg
   40     | args ',' arg

   41 arg: ident

   42 signtparas: ';' datatypes
   43           | %empty

   44 sig_decls: decl ';'
   45          | sig_decls decl ';'

   46 decl: qual_datatype ident '(' multi_datatypes signtparas ')'

   47 qual_datatype: datatype
   48              | CHOICE datatype

   49 datatypes: datatype
   50          | datatypes ',' datatype

   51 multi_datatype: '<' datatypes '>'
   52               | datatype

   53 multi_datatypes: multi_datatype
   54                | multi_datatypes ',' multi_datatype

   55 algebras_opt: algebras
   56             | %empty

   57 algebras: algebra
   58         | algebras algebra

   59 algebra: algebra_head '{' fn_defs '}'
   60        | ALGEBRA ident AUTOMATIC automatic_specifier ';'

   61 automatic_specifier: STRING

   62 mode: MODE

   63 algebra_head: mode ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs ')'
   64             | ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs ')'
   65             | ALGEBRA ident parameters EXTENDS algebra_ident

   66 parameters: parameter_block
   67           | %empty

   68 parameter_block: '(' var_decl_init_p
   69                | '(' var_decl_inits var_decl_init_p

   70 var_decl_inits: var_decl_init_k
   71               | var_decl_inits var_decl_init_k

   72 var_decl_init_p: datatype ident '=' expr ')'

   73 var_decl_init_k: datatype ident '=' expr ','

   74 var_decl_init: datatype ident '=' expr ';'

   75 var_decl: datatype ident ';'
   76         | var_decl_init

   77 algebra_ident: STRING
   78              | MODE

   79 ident: STRING
   80      | MODE

   81 eqs: eq
   82    | eqs ',' eq

   83 eq: sig_var '=' datatype

   84 sig_var: sort_ident
   85        | "alphabet keyword"

   86 sort_ident: STRING

   87 fn_defs: %empty
   88        | fn_defs fn_def

   89 fn_def: mode_opt qual_datatype ident '(' para_decls fnntparas ')' '{' statements '}'

   90 fnntparas: ';' para_decls
   91          | %empty

   92 mode_opt: mode
   93         | %empty

   94 para_decls: %empty
   95           | para_decl
   96           | para_decls ',' para_decl

   97 para_decl: datatype ident
   98          | '<' para_decls '>'
   99          | VOID

  100 statements: statement
  101           | statements statement

  102 statement: continue
  103          | break
  104          | return
  105          | if
  106          | for
  107          | while
  108          | assign
  109          | var_decl
  110          | fn_call
  111          | '{' statements '}'

  112 continue: CONTINUE ';'

  113 break: BREAK ';'

  114 fn_call: ident '(' exprs ')' ';'

  115 return: RETURN expr ';'

  116 if: IF '(' expr ')' statement
  117   | IF '(' expr ')' statement ELSE statement

  118 for: FOR '(' var_decl_init expr ';' inc_stmt ')' statement

  119 while: WHILE '(' expr ')' statement

  120 assign: var_access '=' expr ';'

  121 inc_stmt: var_access '=' expr

  122 var_access: ident
  123           | var_access '.' name_ident
  124           | var_access '[' expr ']'

  125 expr: expr '<' expr
  126     | expr '>' expr
  127     | expr LT expr
  128     | expr GT expr
  129     | expr EQ expr
  130     | expr NEQ expr
  131     | expr AND expr
  132     | expr OR expr
  133     | '(' expr ')'
  134     | NOT expr
  135     | expr '+' expr
  136     | expr '-' expr
  137     | expr '*' expr
  138     | expr '/' expr
  139     | STRING '(' exprs_empty ')'
  140     | var_access
  141     | const

  142 number: NUMBER
  143       | NUMBER '.' NUMBER
  144       | FLOAT
  145       | NUMBER '$' NUMBER
  146       | '-' number

  147 exprs: expr
  148      | exprs ',' expr

  149 exprs_empty: exprs
  150            | %empty

  151 grammars: grammar
  152         | grammars grammar

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' nt_ident ')' '{' grammar_body '}'

  154 grammar_body: tabulated productions
  155             | productions

  156 tabulated: TABULATED '{' args '}'

  157 signature_ident: STRING

  158 nt_ident: STRING

  159 productions: production
  160            | productions production

  161 production: ident ntargs '=' rhs ';'

  162 ntargs: '(' para_decls ')'
  163       | %empty

  164 rhs: alts
  165    | alts '#' choice_fn_ident

  166 choice_fn_ident: STRING

  167 ntparas: ';' exprs
  168        | %empty

  169 filters: filters ',' filter_fn
  170        | filter_fn

  171 tracks: track
  172       | tracks ',' track

  173 track: alt

  174 alts: alt
  175     | alts '|' alt

  176 alt: '{' alts '}'
  177    | sig_fn_or_term_ident '(' rhs_args ntparas ')'
  178    | symbol_ident
  179    | alt filter_kw filter_fn
  180    | '<' tracks '>'
  181    | alt filter_kw '<' filters '>'
  182    | alt '.' '(' exprs ')' '.'
  183    | symbol_ident '[' exprs ']'
  184    | alt '.' '{' alt '}' '.'
  185    | '.' '[' statements ']' '.' '{' alt '}'

  186 sig_fn_or_term_ident: STRING

  187 symbol_ident: STRING

  188 filter_kw: WITH
  189          | SUCHTHAT
  190          | WITH_OVERLAY
  191          | SUCHTHAT_OVERLAY

  192 filter_fn: ident
  193          | ident '(' exprs ')'

  194 rhs_args: rhs_arg
  195         | rhs_args ',' rhs_arg

  196 rhs_arg: alt
  197        | const

  198 const: number
  199      | '\'' character_constant '\''
  200      | '"' string_constant '"'

  201 string_constant: STRING
  202                | %empty

  203 character_constant: STRING

  204 instances_opt: instances
  205              | %empty

  206 instances: instances_

  207 instances_: instance
  208           | instances_ instance

  209 $@4: %empty

  210 instance: INSTANCE i_lhs '=' ident $@4 '(' product ')' ';'

  211 i_lhs: ident
  212      | ident '(' args ')'

  213 product: product '*' product
  214        | product '/' product
  215        | product '%' product
  216        | product '^' product
  217        | product '.' product
  218        | product '|' product
  219        | product '{' defaults '}'
  220        | '(' product ')'
  221        | algebra_ident
  222        | product SUCHTHAT filter_fn

  223 defaults: default
  224         | defaults ',' default

  225 default: var_access '=' expr


Terminals, with rules where they appear

"end of file" (0) 0
'"' (34) 11 200
'#' (35) 165
'$' (36) 145
'%' (37) 215
'\'' (39) 199
'(' (40) 30 37 46 63 64 68 69 89 114 116 117 118 119 133 139 153 162
    177 182 193 210 212 220
')' (41) 30 37 46 63 64 72 89 114 116 117 118 119 133 139 153 162 177
    182 193 210 212 220
'*' (42) 137 213
'+' (43) 135
',' (44) 17 33 38 40 50 54 73 82 96 148 169 172 195 224
'-' (45) 136 146
'.' (46) 123 143 182 184 185 217
'/' (47) 138 214
';' (59) 42 44 45 60 74 75 90 112 113 114 115 118 120 161 167 210
'<' (60) 14 51 98 125 180 181
'=' (61) 24 25 72 73 74 83 120 121 153 161 210 225
'>' (62) 14 51 98 126 180 181
'[' (91) 29 124 183 185
']' (93) 29 124 183 185
'^' (94) 216
'{' (123) 37 59 89 111 153 156 176 184 185 219
'|' (124) 175 218
'}' (125) 37 59 89 111 153 156 176 184 185 219
error (256)
START_PROGRAM (258) 1
START_PRODUCT (259) 3
ALGEBRA (260) 60 63 64 65
MODE (261) 62 78 80
"alphabet keyword" (262) 27 38 85
AND (263) 131
AXIOM (264) 153
CHOICE (265) 48
DEC (266)
DEQ (267)
ELSE (268) 117
EXTENDS (269) 65
EQ (270) 129
FOR (271) 118
WHILE (272) 119
GRAMMAR (273) 153
GT (274) 128
STRING (275) 11 12 19 31 35 61 77 79 86 139 157 158 166 186 187 201
    203
IEQ (276)
IF (277) 116 117
IMPLEMENTS (278) 63 64
IMPORT (279) 10 11
INPUT (280) 13 14
INC (281)
INSTANCE (282) 210
LT (283) 127
NEQ (284) 130
NOT (285) 134
NUMBER (286) 142 143 145
FLOAT (287) 144
OR (288) 132
PARAMETERS (289)
RETURN (290) 115
CONTINUE (291) 112
BREAK (292) 113
SIGNATURE (293) 37
TABULATED (294) 156
TYPE (295) 24 25
EXTERN (296) 25
USES (297) 153
VOID (298) 28 99
WITH (299) 188
SUCHTHAT (300) 189 222
WITH_OVERLAY (301) 190
SUCHTHAT_OVERLAY (302) 191
AUTOMATIC (303) 60
LEB (304)
REB (305)
UNEXPECTED_CHARACTER (306)
LOWER_THAN_ELSE (307)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
start (77)
    on left: 1 3, on right: 0
$@1 (78)
    on left: 2, on right: 3
program (79)
    on left: 5, on right: 1
$@2 (80)
    on left: 4, on right: 5
imports_opt (81)
    on left: 6 7, on right: 5
imports (82)
    on left: 8 9, on right: 6 9
import (83)
    on left: 10 11, on right: 8 9
module_ident (84)
    on left: 12, on right: 10
input_opt (85)
    on left: 13 14 15, on right: 5
inputs (86)
    on left: 16 17, on right: 14 17
input (87)
    on left: 18, on right: 16 17
input_specifier (88)
    on left: 19, on right: 13 18
types_opt (89)
    on left: 20 21, on right: 5
types (90)
    on left: 22 23, on right: 20 23
type (91)
    on left: 24 25, on right: 22 23
datatype (92)
    on left: 26 27 28 29 30, on right: 24 34 47 48 49 50 52 72 73 74
    75 83 97
type_specifier (93)
    on left: 31, on right: 26 29
named_datatypes (94)
    on left: 32 33, on right: 30 33
named_datatype (95)
    on left: 34, on right: 32 33
name_ident (96)
    on left: 35, on right: 34 123
signature (97)
    on left: 37, on right: 5
@3 (98)
    on left: 36, on right: 37
sig_args (99)
    on left: 38, on right: 37
args (100)
    on left: 39 40, on right: 38 40 156 212
arg (101)
    on left: 41, on right: 39 40
signtparas (102)
    on left: 42 43, on right: 38 46
sig_decls (103)
    on left: 44 45, on right: 37 45
decl (104)
    on left: 46, on right: 44 45
qual_datatype (105)
    on left: 47 48, on right: 46 89
datatypes (106)
    on left: 49 50, on right: 42 50 51
multi_datatype (107)
    on left: 51 52, on right: 53 54
multi_datatypes (108)
    on left: 53 54, on right: 46 54
algebras_opt (109)
    on left: 55 56, on right: 5
algebras (110)
    on left: 57 58, on right: 55 58
algebra (111)
    on left: 59 60, on right: 57 58
automatic_specifier (112)
    on left: 61, on right: 60
mode (113)
    on left: 62, on right: 63 92
algebra_head (114)
    on left: 63 64 65, on right: 59
parameters (115)
    on left: 66 67, on right: 63 64 65
parameter_block (116)
    on left: 68 69, on right: 66
var_decl_inits (117)
    on left: 70 71, on right: 69 71
var_decl_init_p (118)
    on left: 72, on right: 68 69
var_decl_init_k (119)
    on left: 73, on right: 70 71
var_decl_init (120)
    on left: 74, on right: 76 118
var_decl (121)
    on left: 75 76, on right: 109
algebra_ident (122)
    on left: 77 78, on right: 65 221
ident (123)
    on left: 79 80, on right: 24 25 37 41 46 60 63 64 65 72 73 74 75
    89 97 114 122 153 161 192 193 210 211 212
eqs (124)
    on left: 81 82, on right: 63 64 82
eq (125)
    on left: 83, on right: 81 82
sig_var (126)
    on left: 84 85, on right: 83
sort_ident (127)
    on left: 86, on right: 84
fn_defs (128)
    on left: 87 88, on right: 59 88
fn_def (129)
    on left: 89, on right: 88
fnntparas (130)
    on left: 90 91, on right: 89
mode_opt (131)
    on left: 92 93, on right: 89
para_decls (132)
    on left: 94 95 96, on right: 89 90 96 98 162
para_decl (133)
    on left: 97 98 99, on right: 95 96
statements (134)
    on left: 100 101, on right: 89 101 111 185
statement (135)
    on left: 102 103 104 105 106 107 108 109 110 111, on right: 100
    101 116 117 118 119
continue (136)
    on left: 112, on right: 102
break (137)
    on left: 113, on right: 103
fn_call (138)
    on left: 114, on right: 110
return (139)
    on left: 115, on right: 104
if (140)
    on left: 116 117, on right: 105
for (141)
    on left: 118, on right: 106
while (142)
    on left: 119, on right: 107
assign (143)
    on left: 120, on right: 108
inc_stmt (144)
    on left: 121, on right: 118
var_access (145)
    on left: 122 123 124, on right: 120 121 123 124 140 225
expr (146)
    on left: 125 126 127 128 129 130 131 132 133 134 135 136 137 138
    139 140 141, on right: 72 73 74 115 116 117 118 119 120 121 124
    125 126 127 128 129 130 131 132 133 134 135 136 137 138 147 148
    225
number (147)
    on left: 142 143 144 145 146, on right: 146 198
exprs (148)
    on left: 147 148, on right: 114 148 149 167 182 183 193
exprs_empty (149)
    on left: 149 150, on right: 139
grammars (150)
    on left: 151 152, on right: 5 152
grammar (151)
    on left: 153, on right: 151 152
grammar_body (152)
    on left: 154 155, on right: 153
tabulated (153)
    on left: 156, on right: 154
signature_ident (154)
    on left: 157, on right: 63 64 153
nt_ident (155)
    on left: 158, on right: 153
productions (156)
    on left: 159 160, on right: 154 155 160
production (157)
    on left: 161, on right: 159 160
ntargs (158)
    on left: 162 163, on right: 161
rhs (159)
    on left: 164 165, on right: 161
choice_fn_ident (160)
    on left: 166, on right: 165
ntparas (161)
    on left: 167 168, on right: 177
filters (162)
    on left: 169 170, on right: 169 181
tracks (163)
    on left: 171 172, on right: 172 180
track (164)
    on left: 173, on right: 171 172
alts (165)
    on left: 174 175, on right: 164 165 175 176
alt (166)
    on left: 176 177 178 179 180 181 182 183 184 185, on right: 173
    174 175 179 181 182 184 185 196
sig_fn_or_term_ident (167)
    on left: 186, on right: 177
symbol_ident (168)
    on left: 187, on right: 178 183
filter_kw (169)
    on left: 188 189 190 191, on right: 179 181
filter_fn (170)
    on left: 192 193, on right: 169 170 179 222
rhs_args (171)
    on left: 194 195, on right: 177 195
rhs_arg (172)
    on left: 196 197, on right: 194 195
const (173)
    on left: 198 199 200, on right: 141 197
string_constant (174)
    on left: 201 202, on right: 200
character_constant (175)
    on left: 203, on right: 199
instances_opt (176)
    on left: 204 205, on right: 5
instances (177)
    on left: 206, on right: 204
instances_ (178)
    on left: 207 208, on right: 206 208
instance (179)
    on left: 210, on right: 207 208
$@4 (180)
    on left: 209, on right: 210
i_lhs (181)
    on left: 211 212, on right: 210
product (182)
    on left: 213 214 215 216 217 218 219 220 221 222, on right: 3 210
    213 214 215 216 217 218 219 220 222
defaults (183)
    on left: 223 224, on right: 219 224
default (184)
    on left: 225, on right: 223 224


State 0

    0 $accept: . start "end of file"

    START_PROGRAM  shift, and go to state 1
    START_PRODUCT  shift, and go to state 2

    start  go to state 3


State 1

    1 start: START_PROGRAM . program

    IMPORT  shift, and go to state 4

    $default  reduce using rule 7 (imports_opt)

    program      go to state 5
    imports_opt  go to state 6
    imports      go to state 7
    import       go to state 8


State 2

    3 start: START_PRODUCT . $@1 product

    $default  reduce using rule 2 ($@1)

    $@1  go to state 9


State 3

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 10


State 4

   10 import: IMPORT . module_ident
   11       | IMPORT . '"' STRING '"'

    STRING  shift, and go to state 11
    '"'     shift, and go to state 12

    module_ident  go to state 13


State 5

    1 start: START_PROGRAM program .

    $default  reduce using rule 1 (start)


State 6

    5 program: imports_opt . input_opt types_opt signature algebras_opt grammars $@2 instances_opt

    INPUT  shift, and go to state 14

    $default  reduce using rule 15 (input_opt)

    input_opt  go to state 15


State 7

    6 imports_opt: imports .
    9 imports: imports . import

    IMPORT  shift, and go to state 4

    $default  reduce using rule 6 (imports_opt)

    import  go to state 16


State 8

    8 imports: import .

    $default  reduce using rule 8 (imports)


State 9

    3 start: START_PRODUCT $@1 . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 21


State 10

    0 $accept: start "end of file" .

    $default  accept


State 11

   12 module_ident: STRING .

    $default  reduce using rule 12 (module_ident)


State 12

   11 import: IMPORT '"' . STRING '"'

    STRING  shift, and go to state 22


State 13

   10 import: IMPORT module_ident .

    $default  reduce using rule 10 (import)


State 14

   13 input_opt: INPUT . input_specifier
   14          | INPUT . '<' inputs '>'

    STRING  shift, and go to state 23
    '<'     shift, and go to state 24

    input_specifier  go to state 25


State 15

    5 program: imports_opt input_opt . types_opt signature algebras_opt grammars $@2 instances_opt

    TYPE  shift, and go to state 26

    $default  reduce using rule 21 (types_opt)

    types_opt  go to state 27
    types      go to state 28
    type       go to state 29


State 16

    9 imports: imports import .

    $default  reduce using rule 9 (imports)


State 17

   78 algebra_ident: MODE .

    $default  reduce using rule 78 (algebra_ident)


State 18

   77 algebra_ident: STRING .

    $default  reduce using rule 77 (algebra_ident)


State 19

  220 product: '(' . product ')'

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 30


State 20

  221 product: algebra_ident .

    $default  reduce using rule 221 (product)


State 21

    3 start: START_PRODUCT $@1 product .
  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '*'       shift, and go to state 32
    '/'       shift, and go to state 33
    '|'       shift, and go to state 34
    '%'       shift, and go to state 35
    '.'       shift, and go to state 36
    '^'       shift, and go to state 37
    '{'       shift, and go to state 38

    $default  reduce using rule 3 (start)


State 22

   11 import: IMPORT '"' STRING . '"'

    '"'  shift, and go to state 39


State 23

   19 input_specifier: STRING .

    $default  reduce using rule 19 (input_specifier)


State 24

   14 input_opt: INPUT '<' . inputs '>'

    STRING  shift, and go to state 23

    inputs           go to state 40
    input            go to state 41
    input_specifier  go to state 42


State 25

   13 input_opt: INPUT input_specifier .

    $default  reduce using rule 13 (input_opt)


State 26

   24 type: TYPE . ident '=' datatype
   25     | TYPE . ident '=' EXTERN

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 45


State 27

    5 program: imports_opt input_opt types_opt . signature algebras_opt grammars $@2 instances_opt

    SIGNATURE  shift, and go to state 46

    signature  go to state 47


State 28

   20 types_opt: types .
   23 types: types . type

    TYPE  shift, and go to state 26

    $default  reduce using rule 20 (types_opt)

    type  go to state 48


State 29

   22 types: type .

    $default  reduce using rule 22 (types)


State 30

  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  220        | '(' product . ')'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '*'       shift, and go to state 32
    '/'       shift, and go to state 33
    '|'       shift, and go to state 34
    '%'       shift, and go to state 35
    '.'       shift, and go to state 36
    '^'       shift, and go to state 37
    '{'       shift, and go to state 38
    ')'       shift, and go to state 49


State 31

  222 product: product SUCHTHAT . filter_fn

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident      go to state 50
    filter_fn  go to state 51


State 32

  213 product: product '*' . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 52


State 33

  214 product: product '/' . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 53


State 34

  218 product: product '|' . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 54


State 35

  215 product: product '%' . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 55


State 36

  217 product: product '.' . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 56


State 37

  216 product: product '^' . product

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 57


State 38

  219 product: product '{' . defaults '}'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident       go to state 58
    var_access  go to state 59
    defaults    go to state 60
    default     go to state 61


State 39

   11 import: IMPORT '"' STRING '"' .

    $default  reduce using rule 11 (import)


State 40

   14 input_opt: INPUT '<' inputs . '>'
   17 inputs: inputs . ',' input

    '>'  shift, and go to state 62
    ','  shift, and go to state 63


State 41

   16 inputs: input .

    $default  reduce using rule 16 (inputs)


State 42

   18 input: input_specifier .

    $default  reduce using rule 18 (input)


State 43

   80 ident: MODE .

    $default  reduce using rule 80 (ident)


State 44

   79 ident: STRING .

    $default  reduce using rule 79 (ident)


State 45

   24 type: TYPE ident . '=' datatype
   25     | TYPE ident . '=' EXTERN

    '='  shift, and go to state 64


State 46

   37 signature: SIGNATURE . ident '(' sig_args ')' @3 '{' sig_decls '}'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 65


State 47

    5 program: imports_opt input_opt types_opt signature . algebras_opt grammars $@2 instances_opt

    ALGEBRA  shift, and go to state 66
    MODE     shift, and go to state 67

    $default  reduce using rule 56 (algebras_opt)

    algebras_opt  go to state 68
    algebras      go to state 69
    algebra       go to state 70
    mode          go to state 71
    algebra_head  go to state 72


State 48

   23 types: types type .

    $default  reduce using rule 23 (types)


State 49

  220 product: '(' product ')' .

    $default  reduce using rule 220 (product)


State 50

  192 filter_fn: ident .
  193          | ident . '(' exprs ')'

    '('  shift, and go to state 73

    $default  reduce using rule 192 (filter_fn)


State 51

  222 product: product SUCHTHAT filter_fn .

    $default  reduce using rule 222 (product)


State 52

  213 product: product . '*' product
  213        | product '*' product .
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '{'       shift, and go to state 38

    $default  reduce using rule 213 (product)


State 53

  213 product: product . '*' product
  214        | product . '/' product
  214        | product '/' product .
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '{'       shift, and go to state 38

    $default  reduce using rule 214 (product)


State 54

  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  218        | product '|' product .
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '{'       shift, and go to state 38

    $default  reduce using rule 218 (product)


State 55

  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  215        | product '%' product .
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '{'       shift, and go to state 38

    $default  reduce using rule 215 (product)


State 56

  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  217        | product '.' product .
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '{'       shift, and go to state 38

    $default  reduce using rule 217 (product)


State 57

  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  216        | product '^' product .
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '{'       shift, and go to state 38

    $default  reduce using rule 216 (product)


State 58

  122 var_access: ident .

    $default  reduce using rule 122 (var_access)


State 59

  123 var_access: var_access . '.' name_ident
  124           | var_access . '[' expr ']'
  225 default: var_access . '=' expr

    '.'  shift, and go to state 74
    '='  shift, and go to state 75
    '['  shift, and go to state 76


State 60

  219 product: product '{' defaults . '}'
  224 defaults: defaults . ',' default

    ','  shift, and go to state 77
    '}'  shift, and go to state 78


State 61

  223 defaults: default .

    $default  reduce using rule 223 (defaults)


State 62

   14 input_opt: INPUT '<' inputs '>' .

    $default  reduce using rule 14 (input_opt)


State 63

   17 inputs: inputs ',' . input

    STRING  shift, and go to state 23

    input            go to state 79
    input_specifier  go to state 42


State 64

   24 type: TYPE ident '=' . datatype
   25     | TYPE ident '=' . EXTERN

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    EXTERN              shift, and go to state 82
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 86
    type_specifier  go to state 87


State 65

   37 signature: SIGNATURE ident . '(' sig_args ')' @3 '{' sig_decls '}'

    '('  shift, and go to state 88


State 66

   60 algebra: ALGEBRA . ident AUTOMATIC automatic_specifier ';'
   64 algebra_head: ALGEBRA . ident parameters IMPLEMENTS signature_ident '(' eqs ')'
   65             | ALGEBRA . ident parameters EXTENDS algebra_ident

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 89


State 67

   62 mode: MODE .

    $default  reduce using rule 62 (mode)


State 68

    5 program: imports_opt input_opt types_opt signature algebras_opt . grammars $@2 instances_opt

    GRAMMAR  shift, and go to state 90

    grammars  go to state 91
    grammar   go to state 92


State 69

   55 algebras_opt: algebras .
   58 algebras: algebras . algebra

    ALGEBRA  shift, and go to state 66
    MODE     shift, and go to state 67

    $default  reduce using rule 55 (algebras_opt)

    algebra       go to state 93
    mode          go to state 71
    algebra_head  go to state 72


State 70

   57 algebras: algebra .

    $default  reduce using rule 57 (algebras)


State 71

   63 algebra_head: mode . ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs ')'

    ALGEBRA  shift, and go to state 94


State 72

   59 algebra: algebra_head . '{' fn_defs '}'

    '{'  shift, and go to state 95


State 73

  193 filter_fn: ident '(' . exprs ')'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 105
    number      go to state 106
    exprs       go to state 107
    const       go to state 108


State 74

  123 var_access: var_access '.' . name_ident

    STRING  shift, and go to state 109

    name_ident  go to state 110


State 75

  225 default: var_access '=' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 111
    number      go to state 106
    const       go to state 108


State 76

  124 var_access: var_access '[' . expr ']'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 112
    number      go to state 106
    const       go to state 108


State 77

  224 defaults: defaults ',' . default

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident       go to state 58
    var_access  go to state 59
    default     go to state 113


State 78

  219 product: product '{' defaults '}' .

    $default  reduce using rule 219 (product)


State 79

   17 inputs: inputs ',' input .

    $default  reduce using rule 17 (inputs)


State 80

   27 datatype: "alphabet keyword" .

    $default  reduce using rule 27 (datatype)


State 81

   31 type_specifier: STRING .

    $default  reduce using rule 31 (type_specifier)


State 82

   25 type: TYPE ident '=' EXTERN .

    $default  reduce using rule 25 (type)


State 83

   28 datatype: VOID .

    $default  reduce using rule 28 (datatype)


State 84

   29 datatype: '[' . type_specifier ']'

    STRING  shift, and go to state 81

    type_specifier  go to state 114


State 85

   30 datatype: '(' . named_datatypes ')'

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype         go to state 115
    type_specifier   go to state 87
    named_datatypes  go to state 116
    named_datatype   go to state 117


State 86

   24 type: TYPE ident '=' datatype .

    $default  reduce using rule 24 (type)


State 87

   26 datatype: type_specifier .

    $default  reduce using rule 26 (datatype)


State 88

   37 signature: SIGNATURE ident '(' . sig_args ')' @3 '{' sig_decls '}'

    "alphabet keyword"  shift, and go to state 118

    sig_args  go to state 119


State 89

   60 algebra: ALGEBRA ident . AUTOMATIC automatic_specifier ';'
   64 algebra_head: ALGEBRA ident . parameters IMPLEMENTS signature_ident '(' eqs ')'
   65             | ALGEBRA ident . parameters EXTENDS algebra_ident

    AUTOMATIC  shift, and go to state 120
    '('        shift, and go to state 121

    $default  reduce using rule 67 (parameters)

    parameters       go to state 122
    parameter_block  go to state 123


State 90

  153 grammar: GRAMMAR . ident USES signature_ident '(' AXIOM '=' nt_ident ')' '{' grammar_body '}'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 124


State 91

    5 program: imports_opt input_opt types_opt signature algebras_opt grammars . $@2 instances_opt
  152 grammars: grammars . grammar

    GRAMMAR  shift, and go to state 90

    $default  reduce using rule 4 ($@2)

    $@2      go to state 125
    grammar  go to state 126


State 92

  151 grammars: grammar .

    $default  reduce using rule 151 (grammars)


State 93

   58 algebras: algebras algebra .

    $default  reduce using rule 58 (algebras)


State 94

   63 algebra_head: mode ALGEBRA . ident parameters IMPLEMENTS signature_ident '(' eqs ')'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 127


State 95

   59 algebra: algebra_head '{' . fn_defs '}'

    $default  reduce using rule 87 (fn_defs)

    fn_defs  go to state 128


State 96

   79 ident: STRING .
  139 expr: STRING . '(' exprs_empty ')'

    '('  shift, and go to state 129

    $default  reduce using rule 79 (ident)


State 97

  134 expr: NOT . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 130
    number      go to state 106
    const       go to state 108


State 98

  142 number: NUMBER .
  143       | NUMBER . '.' NUMBER
  145       | NUMBER . '$' NUMBER

    '.'  shift, and go to state 131
    '$'  shift, and go to state 132

    $default  reduce using rule 142 (number)


State 99

  144 number: FLOAT .

    $default  reduce using rule 144 (number)


State 100

  146 number: '-' . number

    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100

    number  go to state 133


State 101

  200 const: '"' . string_constant '"'

    STRING  shift, and go to state 134

    $default  reduce using rule 202 (string_constant)

    string_constant  go to state 135


State 102

  133 expr: '(' . expr ')'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 136
    number      go to state 106
    const       go to state 108


State 103

  199 const: '\'' . character_constant '\''

    STRING  shift, and go to state 137

    character_constant  go to state 138


State 104

  123 var_access: var_access . '.' name_ident
  124           | var_access . '[' expr ']'
  140 expr: var_access .

    '.'  shift, and go to state 74
    '['  shift, and go to state 76

    $default  reduce using rule 140 (expr)


State 105

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr
  147 exprs: expr .

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 147 (exprs)


State 106

  198 const: number .

    $default  reduce using rule 198 (const)


State 107

  148 exprs: exprs . ',' expr
  193 filter_fn: ident '(' exprs . ')'

    ','  shift, and go to state 151
    ')'  shift, and go to state 152


State 108

  141 expr: const .

    $default  reduce using rule 141 (expr)


State 109

   35 name_ident: STRING .

    $default  reduce using rule 35 (name_ident)


State 110

  123 var_access: var_access '.' name_ident .

    $default  reduce using rule 123 (var_access)


State 111

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr
  225 default: var_access '=' expr .

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 225 (default)


State 112

  124 var_access: var_access '[' expr . ']'
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ']'  shift, and go to state 153


State 113

  224 defaults: defaults ',' default .

    $default  reduce using rule 224 (defaults)


State 114

   29 datatype: '[' type_specifier . ']'

    ']'  shift, and go to state 154


State 115

   34 named_datatype: datatype . name_ident

    STRING  shift, and go to state 109

    name_ident  go to state 155


State 116

   30 datatype: '(' named_datatypes . ')'
   33 named_datatypes: named_datatypes . ',' named_datatype

    ','  shift, and go to state 156
    ')'  shift, and go to state 157


State 117

   32 named_datatypes: named_datatype .

    $default  reduce using rule 32 (named_datatypes)


State 118

   38 sig_args: "alphabet keyword" . ',' args signtparas

    ','  shift, and go to state 158


State 119

   37 signature: SIGNATURE ident '(' sig_args . ')' @3 '{' sig_decls '}'

    ')'  shift, and go to state 159


State 120

   60 algebra: ALGEBRA ident AUTOMATIC . automatic_specifier ';'

    STRING  shift, and go to state 160

    automatic_specifier  go to state 161


State 121

   68 parameter_block: '(' . var_decl_init_p
   69                | '(' . var_decl_inits var_decl_init_p

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype         go to state 162
    type_specifier   go to state 87
    var_decl_inits   go to state 163
    var_decl_init_p  go to state 164
    var_decl_init_k  go to state 165


State 122

   64 algebra_head: ALGEBRA ident parameters . IMPLEMENTS signature_ident '(' eqs ')'
   65             | ALGEBRA ident parameters . EXTENDS algebra_ident

    EXTENDS     shift, and go to state 166
    IMPLEMENTS  shift, and go to state 167


State 123

   66 parameters: parameter_block .

    $default  reduce using rule 66 (parameters)


State 124

  153 grammar: GRAMMAR ident . USES signature_ident '(' AXIOM '=' nt_ident ')' '{' grammar_body '}'

    USES  shift, and go to state 168


State 125

    5 program: imports_opt input_opt types_opt signature algebras_opt grammars $@2 . instances_opt

    INSTANCE  shift, and go to state 169

    $default  reduce using rule 205 (instances_opt)

    instances_opt  go to state 170
    instances      go to state 171
    instances_     go to state 172
    instance       go to state 173


State 126

  152 grammars: grammars grammar .

    $default  reduce using rule 152 (grammars)


State 127

   63 algebra_head: mode ALGEBRA ident . parameters IMPLEMENTS signature_ident '(' eqs ')'

    '('  shift, and go to state 121

    $default  reduce using rule 67 (parameters)

    parameters       go to state 174
    parameter_block  go to state 123


State 128

   59 algebra: algebra_head '{' fn_defs . '}'
   88 fn_defs: fn_defs . fn_def

    MODE  shift, and go to state 67
    '}'   shift, and go to state 175

    $default  reduce using rule 93 (mode_opt)

    mode      go to state 176
    fn_def    go to state 177
    mode_opt  go to state 178


State 129

  139 expr: STRING '(' . exprs_empty ')'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    $default  reduce using rule 150 (exprs_empty)

    ident        go to state 58
    var_access   go to state 104
    expr         go to state 105
    number       go to state 106
    exprs        go to state 179
    exprs_empty  go to state 180
    const        go to state 108


State 130

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  134     | NOT expr .
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    $default  reduce using rule 134 (expr)


State 131

  143 number: NUMBER '.' . NUMBER

    NUMBER  shift, and go to state 181


State 132

  145 number: NUMBER '$' . NUMBER

    NUMBER  shift, and go to state 182


State 133

  146 number: '-' number .

    $default  reduce using rule 146 (number)


State 134

  201 string_constant: STRING .

    $default  reduce using rule 201 (string_constant)


State 135

  200 const: '"' string_constant . '"'

    '"'  shift, and go to state 183


State 136

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  133     | '(' expr . ')'
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ')'  shift, and go to state 184


State 137

  203 character_constant: STRING .

    $default  reduce using rule 203 (character_constant)


State 138

  199 const: '\'' character_constant . '\''

    '\''  shift, and go to state 185


State 139

  131 expr: expr AND . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 186
    number      go to state 106
    const       go to state 108


State 140

  129 expr: expr EQ . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 187
    number      go to state 106
    const       go to state 108


State 141

  128 expr: expr GT . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 188
    number      go to state 106
    const       go to state 108


State 142

  127 expr: expr LT . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 189
    number      go to state 106
    const       go to state 108


State 143

  130 expr: expr NEQ . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 190
    number      go to state 106
    const       go to state 108


State 144

  132 expr: expr OR . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 191
    number      go to state 106
    const       go to state 108


State 145

  125 expr: expr '<' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 192
    number      go to state 106
    const       go to state 108


State 146

  126 expr: expr '>' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 193
    number      go to state 106
    const       go to state 108


State 147

  136 expr: expr '-' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 194
    number      go to state 106
    const       go to state 108


State 148

  135 expr: expr '+' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 195
    number      go to state 106
    const       go to state 108


State 149

  137 expr: expr '*' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 196
    number      go to state 106
    const       go to state 108


State 150

  138 expr: expr '/' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 197
    number      go to state 106
    const       go to state 108


State 151

  148 exprs: exprs ',' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 198
    number      go to state 106
    const       go to state 108


State 152

  193 filter_fn: ident '(' exprs ')' .

    $default  reduce using rule 193 (filter_fn)


State 153

  124 var_access: var_access '[' expr ']' .

    $default  reduce using rule 124 (var_access)


State 154

   29 datatype: '[' type_specifier ']' .

    $default  reduce using rule 29 (datatype)


State 155

   34 named_datatype: datatype name_ident .

    $default  reduce using rule 34 (named_datatype)


State 156

   33 named_datatypes: named_datatypes ',' . named_datatype

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 115
    type_specifier  go to state 87
    named_datatype  go to state 199


State 157

   30 datatype: '(' named_datatypes ')' .

    $default  reduce using rule 30 (datatype)


State 158

   38 sig_args: "alphabet keyword" ',' . args signtparas

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    args   go to state 200
    arg    go to state 201
    ident  go to state 202


State 159

   37 signature: SIGNATURE ident '(' sig_args ')' . @3 '{' sig_decls '}'

    $default  reduce using rule 36 (@3)

    @3  go to state 203


State 160

   61 automatic_specifier: STRING .

    $default  reduce using rule 61 (automatic_specifier)


State 161

   60 algebra: ALGEBRA ident AUTOMATIC automatic_specifier . ';'

    ';'  shift, and go to state 204


State 162

   72 var_decl_init_p: datatype . ident '=' expr ')'
   73 var_decl_init_k: datatype . ident '=' expr ','

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 205


State 163

   69 parameter_block: '(' var_decl_inits . var_decl_init_p
   71 var_decl_inits: var_decl_inits . var_decl_init_k

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype         go to state 162
    type_specifier   go to state 87
    var_decl_init_p  go to state 206
    var_decl_init_k  go to state 207


State 164

   68 parameter_block: '(' var_decl_init_p .

    $default  reduce using rule 68 (parameter_block)


State 165

   70 var_decl_inits: var_decl_init_k .

    $default  reduce using rule 70 (var_decl_inits)


State 166

   65 algebra_head: ALGEBRA ident parameters EXTENDS . algebra_ident

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18

    algebra_ident  go to state 208


State 167

   64 algebra_head: ALGEBRA ident parameters IMPLEMENTS . signature_ident '(' eqs ')'

    STRING  shift, and go to state 209

    signature_ident  go to state 210


State 168

  153 grammar: GRAMMAR ident USES . signature_ident '(' AXIOM '=' nt_ident ')' '{' grammar_body '}'

    STRING  shift, and go to state 209

    signature_ident  go to state 211


State 169

  210 instance: INSTANCE . i_lhs '=' ident $@4 '(' product ')' ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 212
    i_lhs  go to state 213


State 170

    5 program: imports_opt input_opt types_opt signature algebras_opt grammars $@2 instances_opt .

    $default  reduce using rule 5 (program)


State 171

  204 instances_opt: instances .

    $default  reduce using rule 204 (instances_opt)


State 172

  206 instances: instances_ .
  208 instances_: instances_ . instance

    INSTANCE  shift, and go to state 169

    $default  reduce using rule 206 (instances)

    instance  go to state 214


State 173

  207 instances_: instance .

    $default  reduce using rule 207 (instances_)


State 174

   63 algebra_head: mode ALGEBRA ident parameters . IMPLEMENTS signature_ident '(' eqs ')'

    IMPLEMENTS  shift, and go to state 215


State 175

   59 algebra: algebra_head '{' fn_defs '}' .

    $default  reduce using rule 59 (algebra)


State 176

   92 mode_opt: mode .

    $default  reduce using rule 92 (mode_opt)


State 177

   88 fn_defs: fn_defs fn_def .

    $default  reduce using rule 88 (fn_defs)


State 178

   89 fn_def: mode_opt . qual_datatype ident '(' para_decls fnntparas ')' '{' statements '}'

    "alphabet keyword"  shift, and go to state 80
    CHOICE              shift, and go to state 216
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 217
    type_specifier  go to state 87
    qual_datatype   go to state 218


State 179

  148 exprs: exprs . ',' expr
  149 exprs_empty: exprs .

    ','  shift, and go to state 151

    $default  reduce using rule 149 (exprs_empty)


State 180

  139 expr: STRING '(' exprs_empty . ')'

    ')'  shift, and go to state 219


State 181

  143 number: NUMBER '.' NUMBER .

    $default  reduce using rule 143 (number)


State 182

  145 number: NUMBER '$' NUMBER .

    $default  reduce using rule 145 (number)


State 183

  200 const: '"' string_constant '"' .

    $default  reduce using rule 200 (const)


State 184

  133 expr: '(' expr ')' .

    $default  reduce using rule 133 (expr)


State 185

  199 const: '\'' character_constant '\'' .

    $default  reduce using rule 199 (const)


State 186

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  131     | expr AND expr .
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 131 (expr)


State 187

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  129     | expr EQ expr .
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 129 (expr)


State 188

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  128     | expr GT expr .
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 128 (expr)


State 189

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  127     | expr LT expr .
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 127 (expr)


State 190

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  130     | expr NEQ expr .
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 130 (expr)


State 191

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  132     | expr OR expr .
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 132 (expr)


State 192

  125 expr: expr . '<' expr
  125     | expr '<' expr .
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 125 (expr)


State 193

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  126     | expr '>' expr .
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 126 (expr)


State 194

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  136     | expr '-' expr .
  137     | expr . '*' expr
  138     | expr . '/' expr

    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 136 (expr)


State 195

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  135     | expr '+' expr .
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 135 (expr)


State 196

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  137     | expr '*' expr .
  138     | expr . '/' expr

    $default  reduce using rule 137 (expr)


State 197

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr
  138     | expr '/' expr .

    $default  reduce using rule 138 (expr)


State 198

  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr
  148 exprs: exprs ',' expr .

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 148 (exprs)


State 199

   33 named_datatypes: named_datatypes ',' named_datatype .

    $default  reduce using rule 33 (named_datatypes)


State 200

   38 sig_args: "alphabet keyword" ',' args . signtparas
   40 args: args . ',' arg

    ','  shift, and go to state 220
    ';'  shift, and go to state 221

    $default  reduce using rule 43 (signtparas)

    signtparas  go to state 222


State 201

   39 args: arg .

    $default  reduce using rule 39 (args)


State 202

   41 arg: ident .

    $default  reduce using rule 41 (arg)


State 203

   37 signature: SIGNATURE ident '(' sig_args ')' @3 . '{' sig_decls '}'

    '{'  shift, and go to state 223


State 204

   60 algebra: ALGEBRA ident AUTOMATIC automatic_specifier ';' .

    $default  reduce using rule 60 (algebra)


State 205

   72 var_decl_init_p: datatype ident . '=' expr ')'
   73 var_decl_init_k: datatype ident . '=' expr ','

    '='  shift, and go to state 224


State 206

   69 parameter_block: '(' var_decl_inits var_decl_init_p .

    $default  reduce using rule 69 (parameter_block)


State 207

   71 var_decl_inits: var_decl_inits var_decl_init_k .

    $default  reduce using rule 71 (var_decl_inits)


State 208

   65 algebra_head: ALGEBRA ident parameters EXTENDS algebra_ident .

    $default  reduce using rule 65 (algebra_head)


State 209

  157 signature_ident: STRING .

    $default  reduce using rule 157 (signature_ident)


State 210

   64 algebra_head: ALGEBRA ident parameters IMPLEMENTS signature_ident . '(' eqs ')'

    '('  shift, and go to state 225


State 211

  153 grammar: GRAMMAR ident USES signature_ident . '(' AXIOM '=' nt_ident ')' '{' grammar_body '}'

    '('  shift, and go to state 226


State 212

  211 i_lhs: ident .
  212      | ident . '(' args ')'

    '('  shift, and go to state 227

    $default  reduce using rule 211 (i_lhs)


State 213

  210 instance: INSTANCE i_lhs . '=' ident $@4 '(' product ')' ';'

    '='  shift, and go to state 228


State 214

  208 instances_: instances_ instance .

    $default  reduce using rule 208 (instances_)


State 215

   63 algebra_head: mode ALGEBRA ident parameters IMPLEMENTS . signature_ident '(' eqs ')'

    STRING  shift, and go to state 209

    signature_ident  go to state 229


State 216

   48 qual_datatype: CHOICE . datatype

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 230
    type_specifier  go to state 87


State 217

   47 qual_datatype: datatype .

    $default  reduce using rule 47 (qual_datatype)


State 218

   89 fn_def: mode_opt qual_datatype . ident '(' para_decls fnntparas ')' '{' statements '}'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 231


State 219

  139 expr: STRING '(' exprs_empty ')' .

    $default  reduce using rule 139 (expr)


State 220

   40 args: args ',' . arg

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    arg    go to state 232
    ident  go to state 202


State 221

   42 signtparas: ';' . datatypes

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 233
    type_specifier  go to state 87
    datatypes       go to state 234


State 222

   38 sig_args: "alphabet keyword" ',' args signtparas .

    $default  reduce using rule 38 (sig_args)


State 223

   37 signature: SIGNATURE ident '(' sig_args ')' @3 '{' . sig_decls '}'

    "alphabet keyword"  shift, and go to state 80
    CHOICE              shift, and go to state 216
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 217
    type_specifier  go to state 87
    sig_decls       go to state 235
    decl            go to state 236
    qual_datatype   go to state 237


State 224

   72 var_decl_init_p: datatype ident '=' . expr ')'
   73 var_decl_init_k: datatype ident '=' . expr ','

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 238
    number      go to state 106
    const       go to state 108


State 225

   64 algebra_head: ALGEBRA ident parameters IMPLEMENTS signature_ident '(' . eqs ')'

    "alphabet keyword"  shift, and go to state 239
    STRING              shift, and go to state 240

    eqs         go to state 241
    eq          go to state 242
    sig_var     go to state 243
    sort_ident  go to state 244


State 226

  153 grammar: GRAMMAR ident USES signature_ident '(' . AXIOM '=' nt_ident ')' '{' grammar_body '}'

    AXIOM  shift, and go to state 245


State 227

  212 i_lhs: ident '(' . args ')'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    args   go to state 246
    arg    go to state 201
    ident  go to state 202


State 228

  210 instance: INSTANCE i_lhs '=' . ident $@4 '(' product ')' ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 247


State 229

   63 algebra_head: mode ALGEBRA ident parameters IMPLEMENTS signature_ident . '(' eqs ')'

    '('  shift, and go to state 248


State 230

   48 qual_datatype: CHOICE datatype .

    $default  reduce using rule 48 (qual_datatype)


State 231

   89 fn_def: mode_opt qual_datatype ident . '(' para_decls fnntparas ')' '{' statements '}'

    '('  shift, and go to state 249


State 232

   40 args: args ',' arg .

    $default  reduce using rule 40 (args)


State 233

   49 datatypes: datatype .

    $default  reduce using rule 49 (datatypes)


State 234

   42 signtparas: ';' datatypes .
   50 datatypes: datatypes . ',' datatype

    ','  shift, and go to state 250

    $default  reduce using rule 42 (signtparas)


State 235

   37 signature: SIGNATURE ident '(' sig_args ')' @3 '{' sig_decls . '}'
   45 sig_decls: sig_decls . decl ';'

    "alphabet keyword"  shift, and go to state 80
    CHOICE              shift, and go to state 216
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85
    '}'                 shift, and go to state 251

    datatype        go to state 217
    type_specifier  go to state 87
    decl            go to state 252
    qual_datatype   go to state 237


State 236

   44 sig_decls: decl . ';'

    ';'  shift, and go to state 253


State 237

   46 decl: qual_datatype . ident '(' multi_datatypes signtparas ')'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 254


State 238

   72 var_decl_init_p: datatype ident '=' expr . ')'
   73 var_decl_init_k: datatype ident '=' expr . ','
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ','  shift, and go to state 255
    ')'  shift, and go to state 256


State 239

   85 sig_var: "alphabet keyword" .

    $default  reduce using rule 85 (sig_var)


State 240

   86 sort_ident: STRING .

    $default  reduce using rule 86 (sort_ident)


State 241

   64 algebra_head: ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs . ')'
   82 eqs: eqs . ',' eq

    ','  shift, and go to state 257
    ')'  shift, and go to state 258


State 242

   81 eqs: eq .

    $default  reduce using rule 81 (eqs)


State 243

   83 eq: sig_var . '=' datatype

    '='  shift, and go to state 259


State 244

   84 sig_var: sort_ident .

    $default  reduce using rule 84 (sig_var)


State 245

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM . '=' nt_ident ')' '{' grammar_body '}'

    '='  shift, and go to state 260


State 246

   40 args: args . ',' arg
  212 i_lhs: ident '(' args . ')'

    ','  shift, and go to state 220
    ')'  shift, and go to state 261


State 247

  210 instance: INSTANCE i_lhs '=' ident . $@4 '(' product ')' ';'

    $default  reduce using rule 209 ($@4)

    $@4  go to state 262


State 248

   63 algebra_head: mode ALGEBRA ident parameters IMPLEMENTS signature_ident '(' . eqs ')'

    "alphabet keyword"  shift, and go to state 239
    STRING              shift, and go to state 240

    eqs         go to state 263
    eq          go to state 242
    sig_var     go to state 243
    sort_ident  go to state 244


State 249

   89 fn_def: mode_opt qual_datatype ident '(' . para_decls fnntparas ')' '{' statements '}'

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 264
    '<'                 shift, and go to state 265
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    $default  reduce using rule 94 (para_decls)

    datatype        go to state 266
    type_specifier  go to state 87
    para_decls      go to state 267
    para_decl       go to state 268


State 250

   50 datatypes: datatypes ',' . datatype

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 269
    type_specifier  go to state 87


State 251

   37 signature: SIGNATURE ident '(' sig_args ')' @3 '{' sig_decls '}' .

    $default  reduce using rule 37 (signature)


State 252

   45 sig_decls: sig_decls decl . ';'

    ';'  shift, and go to state 270


State 253

   44 sig_decls: decl ';' .

    $default  reduce using rule 44 (sig_decls)


State 254

   46 decl: qual_datatype ident . '(' multi_datatypes signtparas ')'

    '('  shift, and go to state 271


State 255

   73 var_decl_init_k: datatype ident '=' expr ',' .

    $default  reduce using rule 73 (var_decl_init_k)


State 256

   72 var_decl_init_p: datatype ident '=' expr ')' .

    $default  reduce using rule 72 (var_decl_init_p)


State 257

   82 eqs: eqs ',' . eq

    "alphabet keyword"  shift, and go to state 239
    STRING              shift, and go to state 240

    eq          go to state 272
    sig_var     go to state 243
    sort_ident  go to state 244


State 258

   64 algebra_head: ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs ')' .

    $default  reduce using rule 64 (algebra_head)


State 259

   83 eq: sig_var '=' . datatype

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 273
    type_specifier  go to state 87


State 260

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' . nt_ident ')' '{' grammar_body '}'

    STRING  shift, and go to state 274

    nt_ident  go to state 275


State 261

  212 i_lhs: ident '(' args ')' .

    $default  reduce using rule 212 (i_lhs)


State 262

  210 instance: INSTANCE i_lhs '=' ident $@4 . '(' product ')' ';'

    '('  shift, and go to state 276


State 263

   63 algebra_head: mode ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs . ')'
   82 eqs: eqs . ',' eq

    ','  shift, and go to state 257
    ')'  shift, and go to state 277


State 264

   28 datatype: VOID .
   99 para_decl: VOID .

    MODE      reduce using rule 28 (datatype)
    STRING    reduce using rule 28 (datatype)
    $default  reduce using rule 99 (para_decl)


State 265

   98 para_decl: '<' . para_decls '>'

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 264
    '<'                 shift, and go to state 265
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    $default  reduce using rule 94 (para_decls)

    datatype        go to state 266
    type_specifier  go to state 87
    para_decls      go to state 278
    para_decl       go to state 268


State 266

   97 para_decl: datatype . ident

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 279


State 267

   89 fn_def: mode_opt qual_datatype ident '(' para_decls . fnntparas ')' '{' statements '}'
   96 para_decls: para_decls . ',' para_decl

    ','  shift, and go to state 280
    ';'  shift, and go to state 281

    $default  reduce using rule 91 (fnntparas)

    fnntparas  go to state 282


State 268

   95 para_decls: para_decl .

    $default  reduce using rule 95 (para_decls)


State 269

   50 datatypes: datatypes ',' datatype .

    $default  reduce using rule 50 (datatypes)


State 270

   45 sig_decls: sig_decls decl ';' .

    $default  reduce using rule 45 (sig_decls)


State 271

   46 decl: qual_datatype ident '(' . multi_datatypes signtparas ')'

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '<'                 shift, and go to state 283
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype         go to state 284
    type_specifier   go to state 87
    multi_datatype   go to state 285
    multi_datatypes  go to state 286


State 272

   82 eqs: eqs ',' eq .

    $default  reduce using rule 82 (eqs)


State 273

   83 eq: sig_var '=' datatype .

    $default  reduce using rule 83 (eq)


State 274

  158 nt_ident: STRING .

    $default  reduce using rule 158 (nt_ident)


State 275

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' nt_ident . ')' '{' grammar_body '}'

    ')'  shift, and go to state 287


State 276

  210 instance: INSTANCE i_lhs '=' ident $@4 '(' . product ')' ';'

    MODE    shift, and go to state 17
    STRING  shift, and go to state 18
    '('     shift, and go to state 19

    algebra_ident  go to state 20
    product        go to state 288


State 277

   63 algebra_head: mode ALGEBRA ident parameters IMPLEMENTS signature_ident '(' eqs ')' .

    $default  reduce using rule 63 (algebra_head)


State 278

   96 para_decls: para_decls . ',' para_decl
   98 para_decl: '<' para_decls . '>'

    '>'  shift, and go to state 289
    ','  shift, and go to state 280


State 279

   97 para_decl: datatype ident .

    $default  reduce using rule 97 (para_decl)


State 280

   96 para_decls: para_decls ',' . para_decl

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 264
    '<'                 shift, and go to state 265
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 266
    type_specifier  go to state 87
    para_decl       go to state 290


State 281

   90 fnntparas: ';' . para_decls

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 264
    '<'                 shift, and go to state 265
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    $default  reduce using rule 94 (para_decls)

    datatype        go to state 266
    type_specifier  go to state 87
    para_decls      go to state 291
    para_decl       go to state 268


State 282

   89 fn_def: mode_opt qual_datatype ident '(' para_decls fnntparas . ')' '{' statements '}'

    ')'  shift, and go to state 292


State 283

   51 multi_datatype: '<' . datatypes '>'

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 233
    type_specifier  go to state 87
    datatypes       go to state 293


State 284

   52 multi_datatype: datatype .

    $default  reduce using rule 52 (multi_datatype)


State 285

   53 multi_datatypes: multi_datatype .

    $default  reduce using rule 53 (multi_datatypes)


State 286

   46 decl: qual_datatype ident '(' multi_datatypes . signtparas ')'
   54 multi_datatypes: multi_datatypes . ',' multi_datatype

    ','  shift, and go to state 294
    ';'  shift, and go to state 221

    $default  reduce using rule 43 (signtparas)

    signtparas  go to state 295


State 287

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' nt_ident ')' . '{' grammar_body '}'

    '{'  shift, and go to state 296


State 288

  210 instance: INSTANCE i_lhs '=' ident $@4 '(' product . ')' ';'
  213 product: product . '*' product
  214        | product . '/' product
  215        | product . '%' product
  216        | product . '^' product
  217        | product . '.' product
  218        | product . '|' product
  219        | product . '{' defaults '}'
  222        | product . SUCHTHAT filter_fn

    SUCHTHAT  shift, and go to state 31
    '*'       shift, and go to state 32
    '/'       shift, and go to state 33
    '|'       shift, and go to state 34
    '%'       shift, and go to state 35
    '.'       shift, and go to state 36
    '^'       shift, and go to state 37
    '{'       shift, and go to state 38
    ')'       shift, and go to state 297


State 289

   98 para_decl: '<' para_decls '>' .

    $default  reduce using rule 98 (para_decl)


State 290

   96 para_decls: para_decls ',' para_decl .

    $default  reduce using rule 96 (para_decls)


State 291

   90 fnntparas: ';' para_decls .
   96 para_decls: para_decls . ',' para_decl

    ','  shift, and go to state 280

    $default  reduce using rule 90 (fnntparas)


State 292

   89 fn_def: mode_opt qual_datatype ident '(' para_decls fnntparas ')' . '{' statements '}'

    '{'  shift, and go to state 298


State 293

   50 datatypes: datatypes . ',' datatype
   51 multi_datatype: '<' datatypes . '>'

    '>'  shift, and go to state 299
    ','  shift, and go to state 250


State 294

   54 multi_datatypes: multi_datatypes ',' . multi_datatype

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '<'                 shift, and go to state 283
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 284
    type_specifier  go to state 87
    multi_datatype  go to state 300


State 295

   46 decl: qual_datatype ident '(' multi_datatypes signtparas . ')'

    ')'  shift, and go to state 301


State 296

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' nt_ident ')' '{' . grammar_body '}'

    MODE       shift, and go to state 43
    STRING     shift, and go to state 44
    TABULATED  shift, and go to state 302

    ident         go to state 303
    grammar_body  go to state 304
    tabulated     go to state 305
    productions   go to state 306
    production    go to state 307


State 297

  210 instance: INSTANCE i_lhs '=' ident $@4 '(' product ')' . ';'

    ';'  shift, and go to state 308


State 298

   89 fn_def: mode_opt qual_datatype ident '(' para_decls fnntparas ')' '{' . statements '}'

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statements      go to state 321
    statement       go to state 322
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 299

   51 multi_datatype: '<' datatypes '>' .

    $default  reduce using rule 51 (multi_datatype)


State 300

   54 multi_datatypes: multi_datatypes ',' multi_datatype .

    $default  reduce using rule 54 (multi_datatypes)


State 301

   46 decl: qual_datatype ident '(' multi_datatypes signtparas ')' .

    $default  reduce using rule 46 (decl)


State 302

  156 tabulated: TABULATED . '{' args '}'

    '{'  shift, and go to state 332


State 303

  161 production: ident . ntargs '=' rhs ';'

    '('  shift, and go to state 333

    $default  reduce using rule 163 (ntargs)

    ntargs  go to state 334


State 304

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' nt_ident ')' '{' grammar_body . '}'

    '}'  shift, and go to state 335


State 305

  154 grammar_body: tabulated . productions

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident        go to state 303
    productions  go to state 336
    production   go to state 307


State 306

  155 grammar_body: productions .
  160 productions: productions . production

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    $default  reduce using rule 155 (grammar_body)

    ident       go to state 303
    production  go to state 337


State 307

  159 productions: production .

    $default  reduce using rule 159 (productions)


State 308

  210 instance: INSTANCE i_lhs '=' ident $@4 '(' product ')' ';' .

    $default  reduce using rule 210 (instance)


State 309

  118 for: FOR . '(' var_decl_init expr ';' inc_stmt ')' statement

    '('  shift, and go to state 338


State 310

  119 while: WHILE . '(' expr ')' statement

    '('  shift, and go to state 339


State 311

   31 type_specifier: STRING .
   79 ident: STRING .

    MODE      reduce using rule 31 (type_specifier)
    STRING    reduce using rule 31 (type_specifier)
    $default  reduce using rule 79 (ident)


State 312

  116 if: IF . '(' expr ')' statement
  117   | IF . '(' expr ')' statement ELSE statement

    '('  shift, and go to state 340


State 313

  115 return: RETURN . expr ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 341
    number      go to state 106
    const       go to state 108


State 314

  112 continue: CONTINUE . ';'

    ';'  shift, and go to state 342


State 315

  113 break: BREAK . ';'

    ';'  shift, and go to state 343


State 316

  111 statement: '{' . statements '}'

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statements      go to state 344
    statement       go to state 322
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 317

   74 var_decl_init: datatype . ident '=' expr ';'
   75 var_decl: datatype . ident ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 345


State 318

   76 var_decl: var_decl_init .

    $default  reduce using rule 76 (var_decl)


State 319

  109 statement: var_decl .

    $default  reduce using rule 109 (statement)


State 320

  114 fn_call: ident . '(' exprs ')' ';'
  122 var_access: ident .

    '('  shift, and go to state 346

    $default  reduce using rule 122 (var_access)


State 321

   89 fn_def: mode_opt qual_datatype ident '(' para_decls fnntparas ')' '{' statements . '}'
  101 statements: statements . statement

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85
    '}'                 shift, and go to state 347

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 348
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 322

  100 statements: statement .

    $default  reduce using rule 100 (statements)


State 323

  102 statement: continue .

    $default  reduce using rule 102 (statement)


State 324

  103 statement: break .

    $default  reduce using rule 103 (statement)


State 325

  110 statement: fn_call .

    $default  reduce using rule 110 (statement)


State 326

  104 statement: return .

    $default  reduce using rule 104 (statement)


State 327

  105 statement: if .

    $default  reduce using rule 105 (statement)


State 328

  106 statement: for .

    $default  reduce using rule 106 (statement)


State 329

  107 statement: while .

    $default  reduce using rule 107 (statement)


State 330

  108 statement: assign .

    $default  reduce using rule 108 (statement)


State 331

  120 assign: var_access . '=' expr ';'
  123 var_access: var_access . '.' name_ident
  124           | var_access . '[' expr ']'

    '.'  shift, and go to state 74
    '='  shift, and go to state 349
    '['  shift, and go to state 76


State 332

  156 tabulated: TABULATED '{' . args '}'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    args   go to state 350
    arg    go to state 201
    ident  go to state 202


State 333

  162 ntargs: '(' . para_decls ')'

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 264
    '<'                 shift, and go to state 265
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    $default  reduce using rule 94 (para_decls)

    datatype        go to state 266
    type_specifier  go to state 87
    para_decls      go to state 351
    para_decl       go to state 268


State 334

  161 production: ident ntargs . '=' rhs ';'

    '='  shift, and go to state 352


State 335

  153 grammar: GRAMMAR ident USES signature_ident '(' AXIOM '=' nt_ident ')' '{' grammar_body '}' .

    $default  reduce using rule 153 (grammar)


State 336

  154 grammar_body: tabulated productions .
  160 productions: productions . production

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    $default  reduce using rule 154 (grammar_body)

    ident       go to state 303
    production  go to state 337


State 337

  160 productions: productions production .

    $default  reduce using rule 160 (productions)


State 338

  118 for: FOR '(' . var_decl_init expr ';' inc_stmt ')' statement

    "alphabet keyword"  shift, and go to state 80
    STRING              shift, and go to state 81
    VOID                shift, and go to state 83
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 353
    type_specifier  go to state 87
    var_decl_init   go to state 354


State 339

  119 while: WHILE '(' . expr ')' statement

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 355
    number      go to state 106
    const       go to state 108


State 340

  116 if: IF '(' . expr ')' statement
  117   | IF '(' . expr ')' statement ELSE statement

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 356
    number      go to state 106
    const       go to state 108


State 341

  115 return: RETURN expr . ';'
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ';'  shift, and go to state 357


State 342

  112 continue: CONTINUE ';' .

    $default  reduce using rule 112 (continue)


State 343

  113 break: BREAK ';' .

    $default  reduce using rule 113 (break)


State 344

  101 statements: statements . statement
  111 statement: '{' statements . '}'

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85
    '}'                 shift, and go to state 358

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 348
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 345

   74 var_decl_init: datatype ident . '=' expr ';'
   75 var_decl: datatype ident . ';'

    '='  shift, and go to state 359
    ';'  shift, and go to state 360


State 346

  114 fn_call: ident '(' . exprs ')' ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 105
    number      go to state 106
    exprs       go to state 361
    const       go to state 108


State 347

   89 fn_def: mode_opt qual_datatype ident '(' para_decls fnntparas ')' '{' statements '}' .

    $default  reduce using rule 89 (fn_def)


State 348

  101 statements: statements statement .

    $default  reduce using rule 101 (statements)


State 349

  120 assign: var_access '=' . expr ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 362
    number      go to state 106
    const       go to state 108


State 350

   40 args: args . ',' arg
  156 tabulated: TABULATED '{' args . '}'

    ','  shift, and go to state 220
    '}'  shift, and go to state 363


State 351

   96 para_decls: para_decls . ',' para_decl
  162 ntargs: '(' para_decls . ')'

    ','  shift, and go to state 280
    ')'  shift, and go to state 364


State 352

  161 production: ident ntargs '=' . rhs ';'

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    rhs                   go to state 369
    alts                  go to state 370
    alt                   go to state 371
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 353

   74 var_decl_init: datatype . ident '=' expr ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident  go to state 374


State 354

  118 for: FOR '(' var_decl_init . expr ';' inc_stmt ')' statement

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 375
    number      go to state 106
    const       go to state 108


State 355

  119 while: WHILE '(' expr . ')' statement
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ')'  shift, and go to state 376


State 356

  116 if: IF '(' expr . ')' statement
  117   | IF '(' expr . ')' statement ELSE statement
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ')'  shift, and go to state 377


State 357

  115 return: RETURN expr ';' .

    $default  reduce using rule 115 (return)


State 358

  111 statement: '{' statements '}' .

    $default  reduce using rule 111 (statement)


State 359

   74 var_decl_init: datatype ident '=' . expr ';'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 378
    number      go to state 106
    const       go to state 108


State 360

   75 var_decl: datatype ident ';' .

    $default  reduce using rule 75 (var_decl)


State 361

  114 fn_call: ident '(' exprs . ')' ';'
  148 exprs: exprs . ',' expr

    ','  shift, and go to state 151
    ')'  shift, and go to state 379


State 362

  120 assign: var_access '=' expr . ';'
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ';'  shift, and go to state 380


State 363

  156 tabulated: TABULATED '{' args '}' .

    $default  reduce using rule 156 (tabulated)


State 364

  162 ntargs: '(' para_decls ')' .

    $default  reduce using rule 162 (ntargs)


State 365

  186 sig_fn_or_term_ident: STRING .
  187 symbol_ident: STRING .

    '('       reduce using rule 186 (sig_fn_or_term_ident)
    $default  reduce using rule 187 (symbol_ident)


State 366

  180 alt: '<' . tracks '>'

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    tracks                go to state 381
    track                 go to state 382
    alt                   go to state 383
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 367

  185 alt: '.' . '[' statements ']' '.' '{' alt '}'

    '['  shift, and go to state 384


State 368

  176 alt: '{' . alts '}'

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    alts                  go to state 385
    alt                   go to state 371
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 369

  161 production: ident ntargs '=' rhs . ';'

    ';'  shift, and go to state 386


State 370

  164 rhs: alts .
  165    | alts . '#' choice_fn_ident
  175 alts: alts . '|' alt

    '|'  shift, and go to state 387
    '#'  shift, and go to state 388

    $default  reduce using rule 164 (rhs)


State 371

  174 alts: alt .
  179 alt: alt . filter_kw filter_fn
  181    | alt . filter_kw '<' filters '>'
  182    | alt . '.' '(' exprs ')' '.'
  184    | alt . '.' '{' alt '}' '.'

    WITH              shift, and go to state 389
    SUCHTHAT          shift, and go to state 390
    WITH_OVERLAY      shift, and go to state 391
    SUCHTHAT_OVERLAY  shift, and go to state 392
    '.'               shift, and go to state 393

    $default  reduce using rule 174 (alts)

    filter_kw  go to state 394


State 372

  177 alt: sig_fn_or_term_ident . '(' rhs_args ntparas ')'

    '('  shift, and go to state 395


State 373

  178 alt: symbol_ident .
  183    | symbol_ident . '[' exprs ']'

    '['  shift, and go to state 396

    $default  reduce using rule 178 (alt)


State 374

   74 var_decl_init: datatype ident . '=' expr ';'

    '='  shift, and go to state 359


State 375

  118 for: FOR '(' var_decl_init expr . ';' inc_stmt ')' statement
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ';'  shift, and go to state 397


State 376

  119 while: WHILE '(' expr ')' . statement

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 398
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 377

  116 if: IF '(' expr ')' . statement
  117   | IF '(' expr ')' . statement ELSE statement

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 399
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 378

   74 var_decl_init: datatype ident '=' expr . ';'
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    ';'  shift, and go to state 400


State 379

  114 fn_call: ident '(' exprs ')' . ';'

    ';'  shift, and go to state 401


State 380

  120 assign: var_access '=' expr ';' .

    $default  reduce using rule 120 (assign)


State 381

  172 tracks: tracks . ',' track
  180 alt: '<' tracks . '>'

    '>'  shift, and go to state 402
    ','  shift, and go to state 403


State 382

  171 tracks: track .

    $default  reduce using rule 171 (tracks)


State 383

  173 track: alt .
  179 alt: alt . filter_kw filter_fn
  181    | alt . filter_kw '<' filters '>'
  182    | alt . '.' '(' exprs ')' '.'
  184    | alt . '.' '{' alt '}' '.'

    WITH              shift, and go to state 389
    SUCHTHAT          shift, and go to state 390
    WITH_OVERLAY      shift, and go to state 391
    SUCHTHAT_OVERLAY  shift, and go to state 392
    '.'               shift, and go to state 393

    $default  reduce using rule 173 (track)

    filter_kw  go to state 394


State 384

  185 alt: '.' '[' . statements ']' '.' '{' alt '}'

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statements      go to state 404
    statement       go to state 322
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 385

  175 alts: alts . '|' alt
  176 alt: '{' alts . '}'

    '|'  shift, and go to state 387
    '}'  shift, and go to state 405


State 386

  161 production: ident ntargs '=' rhs ';' .

    $default  reduce using rule 161 (production)


State 387

  175 alts: alts '|' . alt

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    alt                   go to state 406
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 388

  165 rhs: alts '#' . choice_fn_ident

    STRING  shift, and go to state 407

    choice_fn_ident  go to state 408


State 389

  188 filter_kw: WITH .

    $default  reduce using rule 188 (filter_kw)


State 390

  189 filter_kw: SUCHTHAT .

    $default  reduce using rule 189 (filter_kw)


State 391

  190 filter_kw: WITH_OVERLAY .

    $default  reduce using rule 190 (filter_kw)


State 392

  191 filter_kw: SUCHTHAT_OVERLAY .

    $default  reduce using rule 191 (filter_kw)


State 393

  182 alt: alt '.' . '(' exprs ')' '.'
  184    | alt '.' . '{' alt '}' '.'

    '{'  shift, and go to state 409
    '('  shift, and go to state 410


State 394

  179 alt: alt filter_kw . filter_fn
  181    | alt filter_kw . '<' filters '>'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44
    '<'     shift, and go to state 411

    ident      go to state 50
    filter_fn  go to state 412


State 395

  177 alt: sig_fn_or_term_ident '(' . rhs_args ntparas ')'

    STRING  shift, and go to state 365
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '<'     shift, and go to state 366
    '-'     shift, and go to state 100
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368
    '"'     shift, and go to state 101
    '\''    shift, and go to state 103

    number                go to state 106
    alt                   go to state 413
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373
    rhs_args              go to state 414
    rhs_arg               go to state 415
    const                 go to state 416


State 396

  183 alt: symbol_ident '[' . exprs ']'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 105
    number      go to state 106
    exprs       go to state 417
    const       go to state 108


State 397

  118 for: FOR '(' var_decl_init expr ';' . inc_stmt ')' statement

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident       go to state 58
    inc_stmt    go to state 418
    var_access  go to state 419


State 398

  119 while: WHILE '(' expr ')' statement .

    $default  reduce using rule 119 (while)


State 399

  116 if: IF '(' expr ')' statement .
  117   | IF '(' expr ')' statement . ELSE statement

    ELSE  shift, and go to state 420

    $default  reduce using rule 116 (if)


State 400

   74 var_decl_init: datatype ident '=' expr ';' .

    $default  reduce using rule 74 (var_decl_init)


State 401

  114 fn_call: ident '(' exprs ')' ';' .

    $default  reduce using rule 114 (fn_call)


State 402

  180 alt: '<' tracks '>' .

    $default  reduce using rule 180 (alt)


State 403

  172 tracks: tracks ',' . track

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    track                 go to state 421
    alt                   go to state 383
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 404

  101 statements: statements . statement
  185 alt: '.' '[' statements . ']' '.' '{' alt '}'

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    ']'                 shift, and go to state 422
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 348
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 405

  176 alt: '{' alts '}' .

    $default  reduce using rule 176 (alt)


State 406

  175 alts: alts '|' alt .
  179 alt: alt . filter_kw filter_fn
  181    | alt . filter_kw '<' filters '>'
  182    | alt . '.' '(' exprs ')' '.'
  184    | alt . '.' '{' alt '}' '.'

    WITH              shift, and go to state 389
    SUCHTHAT          shift, and go to state 390
    WITH_OVERLAY      shift, and go to state 391
    SUCHTHAT_OVERLAY  shift, and go to state 392
    '.'               shift, and go to state 393

    $default  reduce using rule 175 (alts)

    filter_kw  go to state 394


State 407

  166 choice_fn_ident: STRING .

    $default  reduce using rule 166 (choice_fn_ident)


State 408

  165 rhs: alts '#' choice_fn_ident .

    $default  reduce using rule 165 (rhs)


State 409

  184 alt: alt '.' '{' . alt '}' '.'

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    alt                   go to state 423
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 410

  182 alt: alt '.' '(' . exprs ')' '.'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 105
    number      go to state 106
    exprs       go to state 424
    const       go to state 108


State 411

  181 alt: alt filter_kw '<' . filters '>'

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident      go to state 50
    filters    go to state 425
    filter_fn  go to state 426


State 412

  179 alt: alt filter_kw filter_fn .

    $default  reduce using rule 179 (alt)


State 413

  179 alt: alt . filter_kw filter_fn
  181    | alt . filter_kw '<' filters '>'
  182    | alt . '.' '(' exprs ')' '.'
  184    | alt . '.' '{' alt '}' '.'
  196 rhs_arg: alt .

    WITH              shift, and go to state 389
    SUCHTHAT          shift, and go to state 390
    WITH_OVERLAY      shift, and go to state 391
    SUCHTHAT_OVERLAY  shift, and go to state 392
    '.'               shift, and go to state 393

    $default  reduce using rule 196 (rhs_arg)

    filter_kw  go to state 394


State 414

  177 alt: sig_fn_or_term_ident '(' rhs_args . ntparas ')'
  195 rhs_args: rhs_args . ',' rhs_arg

    ','  shift, and go to state 427
    ';'  shift, and go to state 428

    $default  reduce using rule 168 (ntparas)

    ntparas  go to state 429


State 415

  194 rhs_args: rhs_arg .

    $default  reduce using rule 194 (rhs_args)


State 416

  197 rhs_arg: const .

    $default  reduce using rule 197 (rhs_arg)


State 417

  148 exprs: exprs . ',' expr
  183 alt: symbol_ident '[' exprs . ']'

    ','  shift, and go to state 151
    ']'  shift, and go to state 430


State 418

  118 for: FOR '(' var_decl_init expr ';' inc_stmt . ')' statement

    ')'  shift, and go to state 431


State 419

  121 inc_stmt: var_access . '=' expr
  123 var_access: var_access . '.' name_ident
  124           | var_access . '[' expr ']'

    '.'  shift, and go to state 74
    '='  shift, and go to state 432
    '['  shift, and go to state 76


State 420

  117 if: IF '(' expr ')' statement ELSE . statement

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 433
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 421

  172 tracks: tracks ',' track .

    $default  reduce using rule 172 (tracks)


State 422

  185 alt: '.' '[' statements ']' . '.' '{' alt '}'

    '.'  shift, and go to state 434


State 423

  179 alt: alt . filter_kw filter_fn
  181    | alt . filter_kw '<' filters '>'
  182    | alt . '.' '(' exprs ')' '.'
  184    | alt . '.' '{' alt '}' '.'
  184    | alt '.' '{' alt . '}' '.'

    WITH              shift, and go to state 389
    SUCHTHAT          shift, and go to state 390
    WITH_OVERLAY      shift, and go to state 391
    SUCHTHAT_OVERLAY  shift, and go to state 392
    '.'               shift, and go to state 393
    '}'               shift, and go to state 435

    filter_kw  go to state 394


State 424

  148 exprs: exprs . ',' expr
  182 alt: alt '.' '(' exprs . ')' '.'

    ','  shift, and go to state 151
    ')'  shift, and go to state 436


State 425

  169 filters: filters . ',' filter_fn
  181 alt: alt filter_kw '<' filters . '>'

    '>'  shift, and go to state 437
    ','  shift, and go to state 438


State 426

  170 filters: filter_fn .

    $default  reduce using rule 170 (filters)


State 427

  195 rhs_args: rhs_args ',' . rhs_arg

    STRING  shift, and go to state 365
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '<'     shift, and go to state 366
    '-'     shift, and go to state 100
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368
    '"'     shift, and go to state 101
    '\''    shift, and go to state 103

    number                go to state 106
    alt                   go to state 413
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373
    rhs_arg               go to state 439
    const                 go to state 416


State 428

  167 ntparas: ';' . exprs

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 105
    number      go to state 106
    exprs       go to state 440
    const       go to state 108


State 429

  177 alt: sig_fn_or_term_ident '(' rhs_args ntparas . ')'

    ')'  shift, and go to state 441


State 430

  183 alt: symbol_ident '[' exprs ']' .

    $default  reduce using rule 183 (alt)


State 431

  118 for: FOR '(' var_decl_init expr ';' inc_stmt ')' . statement

    MODE                shift, and go to state 43
    "alphabet keyword"  shift, and go to state 80
    FOR                 shift, and go to state 309
    WHILE               shift, and go to state 310
    STRING              shift, and go to state 311
    IF                  shift, and go to state 312
    RETURN              shift, and go to state 313
    CONTINUE            shift, and go to state 314
    BREAK               shift, and go to state 315
    VOID                shift, and go to state 83
    '{'                 shift, and go to state 316
    '['                 shift, and go to state 84
    '('                 shift, and go to state 85

    datatype        go to state 317
    type_specifier  go to state 87
    var_decl_init   go to state 318
    var_decl        go to state 319
    ident           go to state 320
    statement       go to state 442
    continue        go to state 323
    break           go to state 324
    fn_call         go to state 325
    return          go to state 326
    if              go to state 327
    for             go to state 328
    while           go to state 329
    assign          go to state 330
    var_access      go to state 331


State 432

  121 inc_stmt: var_access '=' . expr

    MODE    shift, and go to state 43
    STRING  shift, and go to state 96
    NOT     shift, and go to state 97
    NUMBER  shift, and go to state 98
    FLOAT   shift, and go to state 99
    '-'     shift, and go to state 100
    '"'     shift, and go to state 101
    '('     shift, and go to state 102
    '\''    shift, and go to state 103

    ident       go to state 58
    var_access  go to state 104
    expr        go to state 443
    number      go to state 106
    const       go to state 108


State 433

  117 if: IF '(' expr ')' statement ELSE statement .

    $default  reduce using rule 117 (if)


State 434

  185 alt: '.' '[' statements ']' '.' . '{' alt '}'

    '{'  shift, and go to state 444


State 435

  184 alt: alt '.' '{' alt '}' . '.'

    '.'  shift, and go to state 445


State 436

  182 alt: alt '.' '(' exprs ')' . '.'

    '.'  shift, and go to state 446


State 437

  181 alt: alt filter_kw '<' filters '>' .

    $default  reduce using rule 181 (alt)


State 438

  169 filters: filters ',' . filter_fn

    MODE    shift, and go to state 43
    STRING  shift, and go to state 44

    ident      go to state 50
    filter_fn  go to state 447


State 439

  195 rhs_args: rhs_args ',' rhs_arg .

    $default  reduce using rule 195 (rhs_args)


State 440

  148 exprs: exprs . ',' expr
  167 ntparas: ';' exprs .

    ','  shift, and go to state 151

    $default  reduce using rule 167 (ntparas)


State 441

  177 alt: sig_fn_or_term_ident '(' rhs_args ntparas ')' .

    $default  reduce using rule 177 (alt)


State 442

  118 for: FOR '(' var_decl_init expr ';' inc_stmt ')' statement .

    $default  reduce using rule 118 (for)


State 443

  121 inc_stmt: var_access '=' expr .
  125 expr: expr . '<' expr
  126     | expr . '>' expr
  127     | expr . LT expr
  128     | expr . GT expr
  129     | expr . EQ expr
  130     | expr . NEQ expr
  131     | expr . AND expr
  132     | expr . OR expr
  135     | expr . '+' expr
  136     | expr . '-' expr
  137     | expr . '*' expr
  138     | expr . '/' expr

    AND  shift, and go to state 139
    EQ   shift, and go to state 140
    GT   shift, and go to state 141
    LT   shift, and go to state 142
    NEQ  shift, and go to state 143
    OR   shift, and go to state 144
    '<'  shift, and go to state 145
    '>'  shift, and go to state 146
    '-'  shift, and go to state 147
    '+'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150

    $default  reduce using rule 121 (inc_stmt)


State 444

  185 alt: '.' '[' statements ']' '.' '{' . alt '}'

    STRING  shift, and go to state 365
    '<'     shift, and go to state 366
    '.'     shift, and go to state 367
    '{'     shift, and go to state 368

    alt                   go to state 448
    sig_fn_or_term_ident  go to state 372
    symbol_ident          go to state 373


State 445

  184 alt: alt '.' '{' alt '}' '.' .

    $default  reduce using rule 184 (alt)


State 446

  182 alt: alt '.' '(' exprs ')' '.' .

    $default  reduce using rule 182 (alt)


State 447

  169 filters: filters ',' filter_fn .

    $default  reduce using rule 169 (filters)


State 448

  179 alt: alt . filter_kw filter_fn
  181    | alt . filter_kw '<' filters '>'
  182    | alt . '.' '(' exprs ')' '.'
  184    | alt . '.' '{' alt '}' '.'
  185    | '.' '[' statements ']' '.' '{' alt . '}'

    WITH              shift, and go to state 389
    SUCHTHAT          shift, and go to state 390
    WITH_OVERLAY      shift, and go to state 391
    SUCHTHAT_OVERLAY  shift, and go to state 392
    '.'               shift, and go to state 393
    '}'               shift, and go to state 449

    filter_kw  go to state 394


State 449

  185 alt: '.' '[' statements ']' '.' '{' alt '}' .

    $default  reduce using rule 185 (alt)
